def gen_bin_tree(height=5, root=1):
    """
    Рекурсивно строит бинарное дерево в виде словаря.
    
    Параметры:
    height (int): Высота дерева. Определяет количество уровней в дереве.
                 По умолчанию: 5
    root (int): Значение корневого узла дерева.
               По умолчанию: 1
    
    Возвращает:
    dict или None: Словарь, представляющий бинарное дерево, где:
                   - 'value': значение текущего узла
                   - 'left': левое поддерево (рекурсивный вызов)
                   - 'right': правое поддерево (рекурсивный вызов)
                   None если height <= 0
    """
    
    # БАЗОВЫЙ СЛУЧАЙ РЕКУРСИИ
    # Если высота дерева меньше или равна 0, возвращаем None
    # Это условие остановки рекурсии - достигли конца ветки
    if height <= 0:
        return None
    
    # СОЗДАНИЕ ТЕКУЩЕГО УЗЛА
    # Создаем словарь для текущего узла дерева
    # Ключ 'value' содержит значение текущего узла (root)
    tree = {"value": root}
    
    # РЕКУРСИВНЫЙ СЛУЧАЙ
    # Если высота больше 1, значит нужно строить дальнейшие уровни дерева
    if height > 1:
        # ЛЕВОЕ ПОДДЕРЕВО
        # Рекурсивный вызов для левого потомка:
        # - height - 1: уменьшаем высоту на 1 (переходим на уровень ниже)
        # - root * 2: значение левого потомка = текущее значение * 2
        tree["left"] = gen_bin_tree(height - 1, root * 2)
        
        # ПРАВОЕ ПОДДЕРЕВО
        # Рекурсивный вызов для правого потомка:
        # - height - 1: уменьшаем высоту на 1 (переходим на уровень ниже)
        # - root + 3: значение правого потомка = текущее значение + 3
        tree["right"] = gen_bin_tree(height - 1, root + 3)
    
    # ВОЗВРАТ РЕЗУЛЬТАТА
    # Возвращаем построенный узел дерева
    return tree